<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NI.Vfs</name>
    </assembly>
    <members>
        <member name="T:NI.Vfs.MemoryFileSystem">
            <summary>
            In-memory filesystem provider implementation.
            </summary>
        </member>
        <member name="T:NI.Vfs.IFileSystem">
            <summary>
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileSystem.ResolveFile(System.String)">
            <summary>
            Finds a file in this file system. 
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileSystem.Root">
            <summary>
            Returns the root file of this file system. 
            </summary>
        </member>
        <member name="T:NI.Vfs.IFileObjectEventsMediator">
            <summary>
            File object events mediator interface.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileCreating(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileCreating event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFolderCreating(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FolderCreating event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileCreated(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileCreated event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileDeleting(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileDeleting event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileDeleted(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileDeleted event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileMoving(NI.Vfs.FileObjectMoveEventArgs)">
            <summary>
            Raise FileMoving event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileMoved(NI.Vfs.FileObjectMoveEventArgs)">
            <summary>
            Raise FileMoved event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileCopying(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileCopying event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileCopied(NI.Vfs.FileObjectEventArgs)">
            <summary>
            Raise FileCopied event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileOpening(NI.Vfs.FileObjectOpenEventArgs)">
            <summary>
            Raise FileOpening event
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObjectEventsMediator.OnFileError(NI.Vfs.FileObjectErrorEventArgs)">
            <summary>
            Raise FileError event
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileCreating">
            <summary>
            Occurs during file creation.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FolderCreating">
            <summary>
            Occurs during folder creation.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileCreated">
            <summary>
            Occurs during file or folder creation.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileDeleting">
            <summary>
            Occurs during file or folder deletion.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileDeleted">
            <summary>
            Occurs during file or folder deletion.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileMoving">
            <summary>
            Occurs during file or folder moving.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileMoved">
            <summary>
            Occurs during file or folder moving.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileCopying">
            <summary>
            Occurs during file or folder copy.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileCopied">
            <summary>
            Occurs during file or folder copy.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileOpening">
            <summary>
            Occurs during file opening.
            </summary>
        </member>
        <member name="E:NI.Vfs.IFileObjectEventsMediator.FileError">
            <summary>
            Occurs during any file error between 'before' and 'after' events.
            </summary>
        </member>
        <member name="T:NI.Vfs.IFileSelector">
            <summary>
            </summary>
        </member>
        <member name="T:NI.Vfs.IFileContent">
            <summary>
            Represents the data content of a file.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileContent.Close">
            <summary>
            Closes all resources used by the content, including any open stream.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileContent.File">
            <summary>
            Returns the file which this is the content of.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileContent.InputStream">
            <summary>
            Returns an input stream for reading the file's content.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileContent.OutputStream">
            <summary>
            Returns an output stream for writing the file's content.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileContent.Size">
            <summary>
            Determines the size of the file, in bytes.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileContent.LastModifiedTime">
            <summary>
            Get or set the last-modified timestamp of the file.
            </summary>
        </member>
        <member name="T:NI.Vfs.MaskFileSelector">
            <summary>
            A IFileSelector that selects files by given mask
            </summary>
        </member>
        <member name="T:NI.Vfs.LocalFile">
            <summary>
            A file object implementation which uses direct file access. 
            </summary>
        </member>
        <member name="T:NI.Vfs.IFileObject">
            <summary>
            Represents a file, and is used to access the content and structure of the file. 
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.Close">
            <summary>
            Closes this file, and its content. This method is a hint to the
            implementation that it can release any resources asociated with the file. 
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.CopyFrom(NI.Vfs.IFileObject)">
            <summary>
            Copies another file, and all its descendents, to this file
            </summary>
            <remarks>
            Copies another file, and all its descendents, to this file. 
            If this file does not exist, it is created. Its parent folder is also created, if necessary.
            If this file does exist, it is deleted first. 
            This method is not transactional. If it fails and throws an exception, this file will potentially only be partially copied. 
            </remarks>
            <param name="srcFile">The source file to copy</param>
        </member>
        <member name="M:NI.Vfs.IFileObject.CopyFrom(System.IO.Stream)">
            <summary>
            Copies data to this file
            </summary>
            <remarks>
            If this file does not exist, it is created.
            If this file does exist, it is deleted first.
            </remarks>
            <param name="data">data input stream</param>
        </member>
        <member name="M:NI.Vfs.IFileObject.CreateFile">
            <summary>
            Creates this file, if it does not exist. Also creates any ancestor folders
            which do not exist. This method does nothing if the file already exists and
            is a file. 
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.CreateFolder">
            <summary>
            Creates this folder, if it does not exist. Also creates any ancestor folders
            which do not exist. This method does nothing if the folder already exists.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.Delete">
            <summary>
            Deletes this file.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.Exists">
            <summary>
            Determines if this file exists.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.GetChildren">
            <summary>
            Lists the children of this file. 
            </summary>
            <returns>
            An array containing the children of this file. The array is unordered. If the
            file does not have any children, a zero-length array is returned. This method
            never returns null.
            </returns>
        </member>
        <member name="M:NI.Vfs.IFileObject.GetContent">
            <summary>
            Returns this file's content.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.FindFiles(NI.Vfs.IFileSelector)">
            <summary>
            Finds the set of matching descendents of this file, in depthwise order.
            </summary>
        </member>
        <member name="M:NI.Vfs.IFileObject.MoveTo(NI.Vfs.IFileObject)">
            <summary>
            Move this file.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileObject.Name">
            <summary>
            Returns the name of this file.
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileObject.Type">
            <summary>
            Returns this file's type. 
            </summary>
        </member>
        <member name="P:NI.Vfs.IFileObject.Parent">
            <summary>
            Returns the folder that contains this file.
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFile.Close">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.Close"/>
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFile.CopyFrom(NI.Vfs.IFileObject)">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.CopyFrom(NI.Vfs.IFileObject)"/>
            </summary>		
        </member>
        <member name="M:NI.Vfs.LocalFile.CopyFrom(NI.Vfs.IFileObject[])">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.CopyFrom(NI.Vfs.IFileObject)"/>
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFile.CopyFrom(System.IO.Stream)">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.CopyFrom(NI.Vfs.IFileObject)"/>
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFile.MoveTo(NI.Vfs.IFileObject)">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.MoveTo(NI.Vfs.IFileObject)"/>
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFile.CreateFile">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.CreateFile"/>
            </summary>		
        </member>
        <member name="M:NI.Vfs.LocalFile.CreateFolder">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.CreateFolder"/>
            </summary>			
        </member>
        <member name="M:NI.Vfs.LocalFile.Delete">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.Delete"/>
            </summary>		
        </member>
        <member name="M:NI.Vfs.LocalFile.Exists">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.Exists"/>
            </summary>		
        </member>
        <member name="M:NI.Vfs.LocalFile.GetContent">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.GetContent"/>
            </summary>		
        </member>
        <member name="M:NI.Vfs.LocalFile.FindFiles(NI.Vfs.IFileSelector)">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.FindFiles(NI.Vfs.IFileSelector)"/>
            </summary>		
        </member>
        <member name="P:NI.Vfs.LocalFile.CopyBufferLength">
            <summary>
            Get or set buffer length used when copying file
            </summary>
        </member>
        <member name="T:NI.Vfs.XmlVfsResolver">
            <summary>
            Resolves external XML resources named by a URI using VFS.
            </summary>
        </member>
        <member name="T:NI.Vfs.FileSystemException">
            <summary>
            File system exception
            </summary>
        </member>
        <member name="T:NI.Vfs.MemoryFile">
            <summary>
            A file object implementation which uses in-memory file access
            </summary>
        </member>
        <member name="M:NI.Vfs.MemoryFile.MoveTo(NI.Vfs.IFileObject)">
            <summary>
            <see cref="M:NI.Vfs.IFileObject.MoveTo(NI.Vfs.IFileObject)"/>
            </summary>
        </member>
        <member name="P:NI.Vfs.MemoryFile.CopyBufferLength">
            <summary>
            Get or set buffer length used when copying file
            </summary>
        </member>
        <member name="T:NI.Vfs.LocalFileContent">
            <summary>
            The content of a local file. 
            </summary>
        </member>
        <member name="M:NI.Vfs.LocalFileContent.Close">
            <summary>
            <see cref="M:NI.Vfs.IFileContent.Close"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:NI.Vfs.LocalFileContent.File" -->
        <member name="P:NI.Vfs.LocalFileContent.InputStream">
            <summary>
            <see cref="P:NI.Vfs.IFileContent.InputStream"/>
            </summary>
        </member>
        <member name="P:NI.Vfs.LocalFileContent.OutputStream">
            <summary>
            <see cref="P:NI.Vfs.IFileContent.OutputStream"/>
            </summary>
        </member>
        <member name="P:NI.Vfs.LocalFileContent.Size">
            <summary>
            <see cref="P:NI.Vfs.IFileContent.Size"/>
            </summary>
        </member>
        <member name="P:NI.Vfs.LocalFileContent.LastModifiedTime">
            <summary>
            <see cref="P:NI.Vfs.IFileContent.LastModifiedTime"/>
            </summary>
        </member>
        <member name="T:NI.Vfs.RegexFileSelector">
            <summary>
            A IFileSelector that selects files by regular expression
            </summary>
        </member>
        <member name="T:NI.Vfs.AllFileSelector">
            <summary>
            A IFileSelector that selects all files
            </summary>
        </member>
        <member name="T:NI.Vfs.LocalFileSystem">
            <summary>
            Local file system component
            </summary>
        </member>
        <member name="P:NI.Vfs.LocalFileSystem.RootFolder">
            <summary>
            Get or set root folder for this instance of local filesystem
            </summary>
        </member>
        <member name="P:NI.Vfs.LocalFileSystem.ReadOnly">
            <summary>
            Get or set read only mode flag
            </summary>
            <remarks>
            When ReadOnly is true file system will allow only 'read' operations.
            </remarks>
        </member>
        <member name="P:NI.Vfs.LocalFileSystem.Cache">
            <summary>
            Get or set cache for caching results from OS API (can be null)
            </summary>
        </member>
        <member name="T:NI.Vfs.MemoryFileContent">
            <summary>
            The content of a in-memory file. 
            </summary>
        </member>
        <member name="T:NI.Vfs.ListFileSelector">
            <summary>
            A IFileSelector that selects files by explicit list of names 
            </summary>
        </member>
    </members>
</doc>
